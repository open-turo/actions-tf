name: terraform Test
description: GitHub Action that runs tests present within a Terraform based GitHub repository.
inputs:
  checkout-repo:
    required: false
    description: Perform checkout as first step of action
    default: "true"
  terraform-cli-credentials-token:
    required: true
    description: The terraform cli config credentials token
  terraform-cli-config-file:
    required: false
    description: Relative path to the terraform cli config file
    default: .terraformrc
  aws-access-key-id:
    required: false
    description: Access key id that grants access to AWS services. Requires aws-secret-access-key input as well.
  aws-secret-access-key:
    required: false
    description: Secret access key that grants access to AWS services. Requires aws-access-key-id input as well.
  s3-bucket-name:
    required: false
    description: S3 bucket name to cache dependencies to speed up runs.
  s3-bucket-region:
    required: false
    description: S3 bucket region to cache dependencies to speed up runs.

runs:
  using: composite
  steps:
    - name: Checkout
      uses: actions/checkout@v3
      if: inputs.checkout-repo == 'true'
    - name: Create credentials file if missing
      id: create-credentials-file
      uses: open-turo/actions-tf/auth@v3
      with:
        terraform-cli-credentials-token: ${{ inputs.terraform-cli-credentials-token }}
        terraform-cli-config-file: ${{ inputs.terraform-cli-config-file }}
    - name: Setup tools
      # Provide opportunity to install terraform, golang, and others
      uses: open-turo/action-setup-tools@v2
    - name: Verify required repository files
      shell: bash
      run: |
        if [[ ! -f ./script/setup ]]; then echo "Missing required file: ./script/setup"; exit 1; fi
        if [[ ! -f ./script/test ]]; then echo "Missing required file: ./script/test"; exit 1; fi
    - name: Configure Terraform plugin cache
      shell: bash
      run: |
        mkdir --parents "${{ runner.temp }}.terraform.d/plugin-cache"
        echo "TF_PLUGIN_CACHE_DIR=${{ runner.temp }}/.terraform.d/plugin-cache" >>"$GITHUB_ENV"
    - name: Compute terraform plugin cache key
      if: inputs.s3-bucket-name != ''
      id: tf_plugin_cache_key
      run: |
        echo "key=terraform-${{ runner.os }}-${{ hashFiles('**/.terraform.lock.hcl', '**/terraform.tf', '**/versions.tf') }}" >> $GITHUB_OUTPUT
      shell: bash
    - name: Load cached terraform plugins if available
      if: inputs.s3-bucket-name != ''
      uses: everpcpc/actions-cache@v2
      id: read_cache
      with:
        bucket: ${{ inputs.s3-bucket-name }}
        use-fallback: false
        path: ${{ runner.temp }}/.terraform.d/plugin-cache
        key: ${{ env.cache-name }}-${{ steps.tf_plugin_cache_key.outputs.key }}
        restore-keys: ${{ env.cache-name }}-
      env:
        AWS_REGION: ${{ inputs.s3-bucket-region }}
        cache-name: ${{ github.event.repository.name }}/cache-tf-plugins
    - name: Setup
      shell: bash
      run: ./script/setup
      env:
        ATLAS_TOKEN: ${{ inputs.terraform-cli-credentials-token }}
    - name: Run tests
      shell: bash
      run: ./script/test
      env:
        AWS_ACCESS_KEY_ID: ${{ inputs.aws-access-key-id }}
        AWS_SECRET_ACCESS_KEY: ${{ inputs.aws-secret-access-key }}
        TF_CLI_CONFIG_FILE: ${{ inputs.terraform-cli-config-file }}
        ATLAS_TOKEN: ${{ inputs.terraform-cli-credentials-token }}
    - name: Post run
      if: always() && ${{ steps.create-credentials-file.outputs.terraform-cli-config-file-created }}
      shell: bash
      run: rm "$HOME/${{ inputs.terraform-cli-config-file }}" || true
