name: terraform Test
description: Tests terraform repository
inputs:
  checkout-repo:
    required: false
    description: Perform checkout as first step of action
    default: "true"
  terraform-cli-credentials-token:
    required: true
    description: The terraform cli config credentials token
  terraform-cli-config-file:
    required: false
    description: Relative or absolute path to the terraform cli config file
    default: ./.terraformrc
  use-terraform-wrapper:
    required: false
    description: Whether or not to use terraform wrapper when setting up terraform
    default: "false"
  aws-access-key-id:
    required: false
    description: Access key id that grants access to AWS services. Requires aws-secret-access-key input as well.
  aws-secret-access-key:
    required: false
    description: Secret access key that grants access to AWS services. Requires aws-access-key-id input as well.

runs:
  using: composite
  steps:
    - name: Checkout
      uses: actions/checkout@v2
      if: inputs.checkout-repo
      with:
        fetch-depth: 0
    - name: Setup terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.1.2
        cli_config_credentials_token: ${{ inputs.terraform-cli-credentials-token }}
        ## This is needed for terratest to pick terraform outputs correctly
        terraform_wrapper: ${{ inputs.use-terraform-wrapper }}
    - name: Verify test setup file exists
      if: hashFiles('./script/setup') == ''
      shell: bash
      run: |
        echo ./script/setup file is required but missing
        exit 1
    - name: Verify test file exists
      if: hashFiles('./script/test') == ''
      shell: bash
      run: |
        echo ./script/test file is required but missing
        exit 1
    - name: Setup
      shell: bash
      run: ./script/setup
      env:
        ATLAS_TOKEN: ${{ inputs.terraform-cli-credentials-token }}
    - name: Run tests
      shell: bash
      run: ./script/test
      env:
        AWS_ACCESS_KEY_ID: ${{ inputs.aws-access-key-id }}
        AWS_SECRET_ACCESS_KEY: ${{ inputs.aws-secret-access-key }}
        TF_CLI_CONFIG_FILE: ${{ inputs.terraform-cli-config-file }}
